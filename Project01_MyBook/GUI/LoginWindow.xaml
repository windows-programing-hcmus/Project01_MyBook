<Window x:Class="Project01_MyBook.GUI.LoginWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
        xmlns:local="clr-namespace:Project01_MyBook"
        xmlns:helpers="clr-namespace:Project01_MyBook.Helpers"
        mc:Ignorable="d"
        Title="LoginWindow" FontFamily="Inter" Height="727" Width="1234" WindowStartupLocation="CenterScreen"
        WindowStyle="None" AllowsTransparency="True" Background="Transparent" Loaded="Window_Loaded"
        KeyDown="Window_KeyDown">

    <Window.Resources>
        <helpers:RelativeToAbsoluteConverter x:Key="absoluteConverter"/>
        <ImageBrush x:Key="CloseButton.Pressed.Background" ImageSource="{Binding closePressed, Converter={StaticResource absoluteConverter}}" Stretch="Fill"/>
        <ImageBrush x:Key="MaxButton.Pressed.Background" ImageSource="{Binding maximizePressed, Converter={StaticResource absoluteConverter}}" Stretch="Fill"/>
        <ImageBrush x:Key="ReDownButton.Background" ImageSource="{Binding restore, Converter={StaticResource absoluteConverter}}" Stretch="Fill"/>
        <ImageBrush x:Key="ReDownButton.Pressed.Background" ImageSource="{Binding restorePressed, Converter={StaticResource absoluteConverter}}" Stretch="Fill"/>
        <ImageBrush x:Key="MinButton.Pressed.Background" ImageSource="{Binding minimizePressed, Converter={StaticResource absoluteConverter}}" Stretch="Fill"/>

        <Style x:Key="CloseButton" TargetType="{x:Type Button}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource CloseButton.Pressed.Background}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource CloseButton.Pressed.Background}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="MaxButton" TargetType="{x:Type Button}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource MaxButton.Pressed.Background}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource MaxButton.Pressed.Background}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="ReDownButton" TargetType="{x:Type Button}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="False">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                                <Setter Property="Background" TargetName="border" Value="{StaticResource ReDownButton.Background}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource ReDownButton.Pressed.Background}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource ReDownButton.Pressed.Background}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="MinButton" TargetType="{x:Type Button}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource MinButton.Pressed.Background}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource MinButton.Pressed.Background}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="textBox" TargetType="Control">
            <Setter Property="FontSize" Value="14" />
            <Setter Property="Grid.Column" Value="1" />
            <Setter Property="Margin" Value="10 0 0 0" />
            <Setter Property="Foreground" Value="#878787" />
            <Setter Property="BorderBrush" Value="Transparent" />
            <Setter Property="BorderThickness" Value="0" />
        </Style>


        <Style x:Key="textHint" TargetType="TextBlock">
            <Setter Property="FontSize" Value="14" />
            <Setter Property="Grid.Column" Value="1" />
            <Setter Property="Panel.ZIndex" Value="1" />
            <Setter Property="Margin" Value="10 0 0 0" />
            <Setter Property="Foreground" Value="#ACB0AF" />
        </Style>


        <Style x:Key="loginButton" TargetType="{x:Type Button}">
            <Setter Property="FontSize" Value="15" />
            <Setter Property="FontWeight" Value="Bold" />
            <Setter Property="Margin" Value="0 20 0 0" />
            <Setter Property="Width" Value="200" />
            <Setter Property="Foreground" Value="#FFDFBB5F" />
            <Setter Property="FocusVisualStyle" Value="{x:Null}" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Background="{TemplateBinding Background}" CornerRadius="17"  Padding="10" Margin="23,0,32,0" >
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#FF9B86CB" />
                    <Setter Property="Foreground" Value="White" />
                </Trigger>
                <Trigger Property="IsMouseCaptured" Value="True">
                    <Setter Property="Background" Value="#FF412678" />
                    <Setter Property="Foreground" Value="White" />
                </Trigger>
            </Style.Triggers>
        </Style>

    </Window.Resources>

    <Border  
        BorderThickness="5"
        CornerRadius="35" MouseDown="Border_MouseDown" >

        <Border.BorderBrush>
            <LinearGradientBrush StartPoint="0,0" EndPoint="1,1">
                <GradientStop Color="#462AD8" Offset="0"/>
                <GradientStop Color="#DA34AE" Offset="0.75"/>
                <GradientStop Color="#8A16C1" Offset="1"/>
            </LinearGradientBrush>
        </Border.BorderBrush>
        <Border.Background>
            <LinearGradientBrush StartPoint="0,0" EndPoint="1,1">
                <GradientStop Color="#FF653AE0" Offset="0.5" />
                <GradientStop Color="#FF74B6D6" Offset="1" />
            </LinearGradientBrush>
        </Border.Background>

        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="115*"/>
                <ColumnDefinition Width="21*"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="48*"/>
                <RowDefinition Height="28*"/>
                <RowDefinition Height="641*"/>
            </Grid.RowDefinitions>
            <Grid Grid.ColumnSpan="2" Margin="0,0,0,641" Grid.RowSpan="3">


            </Grid>
            <!--row 0-->
            <Grid Grid.Row="0" Grid.ColumnSpan="2" Margin="0,0,0,641" Grid.RowSpan="3">


                <StackPanel
                        Orientation="Horizontal"
                                HorizontalAlignment="Right"
                                VerticalAlignment="Top"
                                Height="36" Width="117"
                                Margin="0,25,40,0">
                    <Border CornerRadius="50" Margin="0,0,4,0" Width="36">

                        <Border.Background>
                            <SolidColorBrush Color="White" Opacity="0.6"/>
                        </Border.Background>
                        <Button Style="{DynamicResource MinButton}" x:Name="minButton" BorderThickness="0" Height="24"
                             Click="minButton_Click" Margin="5,0,5,0" RenderTransformOrigin="0.067,0.55">
                            <Button.RenderTransform>
                                <TransformGroup>
                                    <ScaleTransform ScaleX="-1"/>
                                    <SkewTransform/>
                                    <RotateTransform/>
                                    <TranslateTransform X="22.516"/>
                                </TransformGroup>
                            </Button.RenderTransform>
                            <Button.Background>
                                <ImageBrush ImageSource="{Binding minimize, Converter={StaticResource absoluteConverter}}"/>

                            </Button.Background>
                        </Button>
                    </Border>

                    <Border CornerRadius="50" Margin="0,0,4,0" Width="36">
                        <Border.Background>
                            <SolidColorBrush Color="White" Opacity="0.6"/>
                        </Border.Background>
                        <Canvas>
                            <Button Style="{DynamicResource MaxButton}" x:Name="maxButton" BorderThickness="0" Height="18" Width="18"
                             Click="maxButton_Click" Canvas.Left="9" Canvas.Top="9">
                                <Button.Background>
                                    <ImageBrush ImageSource="{Binding maximize, Converter={StaticResource absoluteConverter}}"/>
                                </Button.Background>
                            </Button>
                            <Button Style="{DynamicResource ReDownButton}" x:Name="reDownButton" BorderThickness="0" Height="24" Width="24"
                             Click="maxButton_Click" Canvas.Left="6" Canvas.Top="6"/>
                        </Canvas>
                    </Border>

                    <Border CornerRadius="50" Width="36">
                        <Border.Background>
                            <SolidColorBrush Color="White" Opacity="0.6"/>
                        </Border.Background>
                        <Button Style="{DynamicResource CloseButton}" x:Name="closeButton" BorderThickness="0" Height="24" Width="24"
                             Click="closeButton_Click">
                            <Button.Background>
                                <ImageBrush ImageSource="{Binding close, Converter={StaticResource absoluteConverter}}"/>
                            </Button.Background>
                        </Button>
                    </Border>

                </StackPanel>
            </Grid>

            <!--comlumn 1-->
            <Grid Grid.Row="2" Margin="256,10,67,580" >
                <TextBlock Margin="131,5,90,5" Foreground="White" 
                       Text="Book Store Management System" FontSize="30" FontWeight="Bold" RenderTransformOrigin="0.5,0.5"/>
            </Grid>


            <Border Grid.Row="2"
                            Background="#FFFFFF" 
                            CornerRadius="20" Margin="386,128,197,111" >
                <Border.Effect>
                    <DropShadowEffect BlurRadius="10"
                              Color="#877b77"
                              Opacity="100"
                              ShadowDepth="3"
                              Direction="350" />
                </Border.Effect>
                <StackPanel HorizontalAlignment="Center" VerticalAlignment="Center" >
                    <Label Content="Đăng nhập"  
                           FontSize="25" FontWeight="SemiBold"
                           HorizontalAlignment="Center" Margin="25,55,25,0"></Label>

                    <Label Content="Tên tài khoản"
                           FontFamily="Inter" FontSize="15" FontWeight="Medium"
                           HorizontalAlignment="Left" Margin="10,25,25,0" Width="104"></Label>

                    <Grid Height="40" Width="300">
                        <Grid.Effect>
                            <DropShadowEffect BlurRadius="10"
                              Color="#877b77"
                              Opacity="100"
                              ShadowDepth="3"
                              Direction="350" />
                        </Grid.Effect>

                       
                        <TextBlock x:Name="userTextBlock" MouseDown="userTextBlock_MouseDown" Text="Username" Style="{StaticResource textHint}" Padding="5 10 0 0"/>
                        <TextBox x:Name="userTextBox"
                                 TextChanged="userTxb_TextChanged"
                             Padding="5 10 0 0"
                             Height="40"
                             Background="#EBECF0" BorderThickness="0"/>
                    </Grid>


                    <Label Content="Mật khẩu"                       
                           FontSize="15" FontWeight="Medium"
                           HorizontalAlignment="Left" Margin="10,20,0,0"></Label>

                    <Grid Height="40" Width="300">
                        <Grid.Effect>
                            <DropShadowEffect BlurRadius="10"
                              Color="#877b77"
                              Opacity="100"
                              ShadowDepth="3"
                              Direction="350" />
                        </Grid.Effect>

                        <TextBlock x:Name="passwordTextBlock" MouseDown="passwordTextBlock_MouseDown" Text="Password" Style="{StaticResource textHint}" Padding="5 10 0 0"/>
                        <PasswordBox x:Name="passTextBox" 
                                     PasswordChanged="PasswordBox_PasswordChanged"
                             Padding="5 10 0 0"
                             Height="40" Width="300"
                             Background="#EBECF0" BorderThickness="0"/>
                    </Grid>
                    <Button Content="Đăng nhập" Click="loginButton_Click"  materialDesign:ButtonAssist.CornerRadius="4" Height="40"  Margin="0,20,0,0"   Width="150" />
                </StackPanel>
            </Border>

            <Ellipse Grid.Row="2" Margin="546,61,357,446">
                <Ellipse.Fill>
                    <ImageBrush ImageSource="{Binding store_icon, Converter={StaticResource absoluteConverter}}"/>
                </Ellipse.Fill>
            </Ellipse>
            <Canvas Panel.ZIndex="-10" Grid.ColumnSpan="2" Margin="0,0,0,641" Grid.RowSpan="3">
                <Ellipse Width="483" Height="467" Opacity="0.6" Fill="#FFAF96F7" HorizontalAlignment="Left" VerticalAlignment="Top" Canvas.Left="-192" Canvas.Top="341" />
                <Ellipse Width="466" Height="468" Opacity="0.6" Fill="#FF9B7BF7" HorizontalAlignment="Center" VerticalAlignment="Top" Canvas.Left="50" Canvas.Top="-131" />
                <Ellipse Width="300" Height="300" VerticalAlignment="Bottom" Fill="#FFA68BF3" Opacity="0.3" Canvas.Left="173" Canvas.Top="462" HorizontalAlignment="Left"/>
                <Ellipse Width="358" Height="378" VerticalAlignment="Center" Fill="#FFA084F0" Opacity="0.3" Canvas.Left="-190" Canvas.Top="115" HorizontalAlignment="Left"/>
                <Ellipse Width="358" Height="378" VerticalAlignment="Top" Fill="#FFA98FF3" Opacity="0.2" Canvas.Left="-86" Canvas.Top="-107" HorizontalAlignment="Left"/>
                <Ellipse Width="358" Height="378" VerticalAlignment="Top" Fill="#FFA78DF1" Opacity="0.4" Canvas.Left="-11" Canvas.Top="179" HorizontalAlignment="Center"/>
                <Ellipse Width="387" Height="378" VerticalAlignment="Center" Fill="#FFA992EE" Opacity="0.5" Canvas.Left="387" Canvas.Top="493" HorizontalAlignment="Left"/>
            </Canvas>
        </Grid>
    </Border>

</Window>